<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo目录详解（用到就补）</title>
      <link href="/2022/12/28/hexo%E7%9B%AE%E5%BD%95%E8%AF%A6%E8%A7%A3%EF%BC%88%E7%94%A8%E5%88%B0%E5%B0%B1%E8%A1%A5%EF%BC%89/"/>
      <url>/2022/12/28/hexo%E7%9B%AE%E5%BD%95%E8%AF%A6%E8%A7%A3%EF%BC%88%E7%94%A8%E5%88%B0%E5%B0%B1%E8%A1%A5%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文为本人在使用Hexo博客Next主题时所用到的博客目录下的文件的解释说明，用于防止遗忘记录，也希望能给后人提供帮助。</p><p>本人博客根目录文件夹名为blog，大家请根据自己的根目录名查找相应的文件。</p><span id="more"></span><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><blockquote><p>blog&#x2F;themes&#x2F;next&#x2F;layout&#x2F;_partials&#x2F;head&#x2F;head.swig</p></blockquote><p>在提交站点地图时，需要登录各大搜索引擎的页面管理界面，在提交sitemap之前需要对自己的网站进行验证，其中HTML方法需要在自己的博客页面的&lt;head&gt;下增加其meta代码来验证网站。这时便需要在该文件的开始部分，可以看到有一些meta开头的语句，将搜索引擎提供的meta代码插入到这些meta语句的后面，然后hexo三部曲</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>等几分钟即可用F12在自己的页面代码中看到meta代码已经被成功加入，这时候在搜索引擎的界面点击开始验证即可验证成功。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo遇到的问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> sitemap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022最新Manim安装教程</title>
      <link href="/2022/12/28/2022%E6%9C%80%E6%96%B0Manim%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2022/12/28/2022%E6%9C%80%E6%96%B0Manim%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Manim是一个由3Blue1Brown编写的强大的可视化库，3B1B的视频质量非常高，这与Manim的强大以及作者本人运用的炉火纯青密不可分。</p><p>大家可以看一看3B1B本人在B站的视频来欣赏一下大佬的风范。<a href="https://space.bilibili.com/88461692?spm_id_from=333.337.0.0">3Blue1Brown的B站主页</a></p><p>关于Manim的安装教程网上有一些，但有些博客或教程已经过老，里面的一些内容已经不适用，还有的内容写的并不足够详细。在安装过程中，这些问题将会让安装者十分头痛（我就是），这便有了这篇文章。希望大家可以学习交流。</p><span id="more"></span><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>Manim在Github上是开源的，懂得如何使用的话可以直接点击下面链接</p><p><a href="https://github.com/3b1b/manim">3b1b&#x2F;manim</a></p><p>下面开始安装。</p><p>首先我们需要这些软件，LaTeX的支持工具（这里使用MiKTeX），Python，FFmpeg，SoX，Cairo。</p><h3 id="MiKTeX"><a href="#MiKTeX" class="headerlink" title="MiKTeX"></a>MiKTeX</h3><p>官网下载链接<a href="https://miktex.org/download">在此</a>，但是亲测十分缓慢，而且还容易出现无法获取资源的下载问题。</p><p>我的方法是在网上找到了安装包资源进行安装。</p><p><a href="https://pan.baidu.com/s/1Yn58N1757I4yr5-YZYeV6Q?pwd=1234">点击这里下载</a>（提取码1234）下载下来安装包</p><p>进去首先要选download miktex，选complete miktex，然后后面的源就选第一个就行，然后下载要下一会，下载好再打开安装包，点install miktex就行了。</p><p>或者在<a href="https://www.pcsoft.com.cn/iopdfbhjl/200447?module=soft&t=website">这个链接</a>直接下载完整版的安装包，不用下载了，直接一路默认安装过去就行，记得记安装路径。</p><p>然后要添加一下Path，打开MiKTeX\miktex\bin\x64，将这个地址添加到环境变量的path里面。</p><p>然后在cmd里面输入latex，出现<img src="/2022/12/28/2022%E6%9C%80%E6%96%B0Manim%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/cmd1.png" class>即为安装成功。</p><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p>这个就不介绍了吧，网上教程多如云，也没啥问题的，注意添加Path就行。</p><h3 id="FFmpeg"><a href="#FFmpeg" class="headerlink" title="FFmpeg"></a>FFmpeg</h3><p>这个软件网上的教程很多是几年前的，官网现在已经不一样了。</p><p>打开官网<a href="http://ffmpeg.org/download.html">FFmpeg官网</a></p><img src="/2022/12/28/2022%E6%9C%80%E6%96%B0Manim%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/ffmpeg.png" class><p>点击Windows builds from gyan.dev</p><img src="/2022/12/28/2022%E6%9C%80%E6%96%B0Manim%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/ffmpeg2.png" class><p>点击latest git master branch build里面的ffmpeg-git-full.7z</p><p>下载下来解压到合适的位置，将里面的bin文件夹添加到Path即可。</p><h3 id="SoX"><a href="#SoX" class="headerlink" title="SoX"></a>SoX</h3><p>打开网址<a href="https://sourceforge.net/projects/sox/files/sox/">SoX-sourceforge</a></p><p>点download latest version,安装即可，记住安装路径。</p><p>然后将安装路径的路径添加到Path里面，记得添加紧邻着各个文件的路径，就比如我是Sox&#x2F;sox-14-4-2的下面有一堆文件，就要添加到sox-14-4-2这里而不是只到Sox这里。</p><h3 id="Pycairo"><a href="#Pycairo" class="headerlink" title="Pycairo"></a>Pycairo</h3><p>点击官网<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#pycairo">Pycairo官网</a></p><img src="/2022/12/28/2022%E6%9C%80%E6%96%B0Manim%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/pycairo.png" class><p>看到一堆怎么选择呢？这里需要大家的python安装了wheel，如果没有的话打开cmd运行以下代码安装wheel：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install wheel</span><br></pre></td></tr></table></figure><p>如果说不认识pip这个指令那是你还没有把python的scripts目录加到path里面去</p><p>然后运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip debug --verbose</span><br></pre></td></tr></table></figure><p>就可以看到当前所有支持的whl的种类，然后去官网里面挑可以安装的下载下来，然后在下载的whl文件目录打开终端，输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install xxx.whl (自己改,可以按tab自动补全)</span><br></pre></td></tr></table></figure><p>回车提示成功安装即可</p><h3 id="Manim"><a href="#Manim" class="headerlink" title="Manim"></a>Manim</h3><p>终于！下面开始安装Manim！</p><p>win+r 输入cmd并打开，输入以下代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install manim</span><br><span class="line">python3 manim.py example_scenes.py SquareToCircle -pl</span><br></pre></td></tr></table></figure><p>请注意，有的人可能需要使用python而不是python3来运行最后一行代码。</p><p>我在运行时报了错，发现还需要安装manimgl的依赖。</p><p>于是win+r cmd，输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install manimgl</span><br></pre></td></tr></table></figure><p>安装完成后便可以顺利运行了</p>]]></content>
      
      
      <categories>
          
          <category> 安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Manim </tag>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Ubuntu的搜狗拼音</title>
      <link href="/2022/12/27/%E5%AE%89%E8%A3%85Ubuntu%E7%9A%84%E6%90%9C%E7%8B%97%E6%8B%BC%E9%9F%B3/"/>
      <url>/2022/12/27/%E5%AE%89%E8%A3%85Ubuntu%E7%9A%84%E6%90%9C%E7%8B%97%E6%8B%BC%E9%9F%B3/</url>
      
        <content type="html"><![CDATA[<p>十分麻烦哎哟</p><p>在官网搜安装包</p><p>在download里打开终端输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i so /tab自动补全</span><br></pre></td></tr></table></figure><p>安装完了以后要去设置里面把框架改为fcitx，然后把别的语言都删掉，就剩下中文</p><p>导致我没有成功的一步是没有安装相关依赖库</p><p>说实话应该能猜出来的 因为之前切换到搜狗拼音已经能看见一个雏形的框了，但是还是没有办法打中文</p><p>然后打开终端输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libqt5qml5 libqt5quick5 libqt5quickwidgets5 qml-module-qtquick2</span><br><span class="line">sudo apt install libgsettings-qt1</span><br></pre></td></tr></table></figure><p>再切换输入法输入就好了</p>]]></content>
      
      
      <categories>
          
          <category> Ubuntu合集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> 搜狗 </tag>
            
            <tag> 输入法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VScode codeLLDB 一直等待问题</title>
      <link href="/2022/12/27/VScode-codeLLDB-%E4%B8%80%E7%9B%B4%E7%AD%89%E5%BE%85%E9%97%AE%E9%A2%98/"/>
      <url>/2022/12/27/VScode-codeLLDB-%E4%B8%80%E7%9B%B4%E7%AD%89%E5%BE%85%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><a href="https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb">CodeLLDB - Visual Studio Marketplace</a></p><ol><li>点击Download Extension下载下来vsix包<img src="/2022/12/27/VScode-codeLLDB-%E4%B8%80%E7%9B%B4%E7%AD%89%E5%BE%85%E9%97%AE%E9%A2%98/1.png" class></li><li>到vscode里面打开扩展<img src="/2022/12/27/VScode-codeLLDB-%E4%B8%80%E7%9B%B4%E7%AD%89%E5%BE%85%E9%97%AE%E9%A2%98/2.png" class></li><li>选择刚才下载的包即可</li></ol>]]></content>
      
      
      <categories>
          
          <category> Vscode合集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装软件时报has install-snap change in progress错误</title>
      <link href="/2022/12/27/%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E6%97%B6%E6%8A%A5has-install-snap-change-in-progress%E9%94%99%E8%AF%AF/"/>
      <url>/2022/12/27/%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E6%97%B6%E6%8A%A5has-install-snap-change-in-progress%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>原因是因为软件没安装完，又让安装，也有可能是上一次安装卡半路了</p><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><ol><li><p>在终端里输入snap changes</p></li><li><p>找到对应的snap号</p></li><li><p>输入</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo snap abort “snap号”</span><br></pre></td></tr></table></figure><ol start="4"><li>重新安装</li></ol>]]></content>
      
      
      <categories>
          
          <category> Ubuntu合集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Vmware tools</title>
      <link href="/2022/12/27/%E5%85%B3%E4%BA%8EVMware%20tools/"/>
      <url>/2022/12/27/%E5%85%B3%E4%BA%8EVMware%20tools/</url>
      
        <content type="html"><![CDATA[<h3 id="按钮是灰色怎么办"><a href="#按钮是灰色怎么办" class="headerlink" title="按钮是灰色怎么办"></a>按钮是灰色怎么办</h3><p>按钮是灰色的话可以试试将虚拟机对应的硬盘和软盘都调成使用物理驱动器的自动检测，这样按钮就可以正常使用了</p><h3 id="VMware-tools-修复"><a href="#VMware-tools-修复" class="headerlink" title="VMware tools 修复"></a>VMware tools 修复</h3><p>如果vmware tools 无法正常使用可以试试这篇文章<a href="https://blog.csdn.net/Bunsennn/article/details/117223002"></a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove open-vm-tools</span><br><span class="line">sudo apt-get install open-vm-tools-desktop</span><br></pre></td></tr></table></figure><p>这个管用</p>]]></content>
      
      
      <categories>
          
          <category> Vmware合集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vmware </tag>
            
            <tag> Vmware tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo图片显示问题</title>
      <link href="/2022/12/27/Hexo%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/"/>
      <url>/2022/12/27/Hexo%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>在Hexo搭建的时候遇到了奇葩的问题，网上的hexo-asset-image也下载了，用Markdown原生的图片引用方式引用，发现主页的预览界面可以正常显示，但是点进文章里面就显示不了了。</p><p>而在用了asset文件夹的方式之后，（在页面同目录下创建一个同名文件夹放图片），结果令人哭笑不得————变成了页面内正常显示，主页无法显示了。</p><span id="more"></span><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>笔者对Hexo了解不深，如果有类似经历的或者懂得hexo主页和文章渲染时具体原理的大佬可以在评论区交流一下</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>首先还是需要安装hexo-asset-image插件的，在hexo博客的根目录文件夹打开<strong>git bash</strong>，输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>在<a href="https://blog.csdn.net/Aelous_dp/article/details/107643344">Hexo图片相关 - 文章显示、主页显示、修改fancybox</a>一文中，作者提到自带的asset-image有bug，可以尝试在根目录中找到node_modules下的hexo-asset-image文件夹，修改index.js如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&quot;cheerio&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getPosition</span>(<span class="params">str, m, i</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> str.<span class="title function_">split</span>(m, i).<span class="title function_">join</span>(m).<span class="property">length</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> version = <span class="title class_">String</span>(hexo.<span class="property">version</span>).<span class="title function_">split</span>(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&quot;after_post_render&quot;</span>, <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> config = hexo.<span class="property">config</span>;</span><br><span class="line"><span class="keyword">if</span> (config.<span class="property">post_asset_folder</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> link = data.<span class="property">permalink</span>;</span><br><span class="line">    <span class="keyword">if</span> (version.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; <span class="title class_">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">    <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&quot;/&quot;</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&quot;/&quot;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line">    <span class="keyword">var</span> endPos = link.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;/&quot;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.<span class="title function_">substring</span>(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&quot;excerpt&quot;</span>, <span class="string">&quot;more&quot;</span>, <span class="string">&quot;content&quot;</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> $ = cheerio.<span class="title function_">load</span>(data[key], &#123;</span><br><span class="line">        <span class="attr">ignoreWhitespace</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">xmlMode</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">lowerCaseTags</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $(<span class="string">&quot;img&quot;</span>).<span class="title function_">each</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&quot;src&quot;</span>)) &#123;</span><br><span class="line">        <span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line">        <span class="keyword">var</span> src = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&quot;src&quot;</span>).<span class="title function_">replace</span>(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="regexp">/http[s]*.*|\/\/.*/</span>.<span class="title function_">test</span>(src) &amp;&amp; !<span class="regexp">/^\s*\//</span>.<span class="title function_">test</span>(src)) &#123;</span><br><span class="line">            <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">            <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">            <span class="keyword">var</span> linkArray = link.<span class="title function_">split</span>(<span class="string">&quot;/&quot;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">elem</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> elem != <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">var</span> srcArray = src.<span class="title function_">split</span>(<span class="string">&quot;/&quot;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">elem</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> elem != <span class="string">&quot;&quot;</span> &amp;&amp; elem != <span class="string">&quot;.&quot;</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">if</span> (srcArray.<span class="property">length</span> &gt; <span class="number">1</span>) srcArray.<span class="title function_">shift</span>();</span><br><span class="line">            src = srcArray.<span class="title function_">join</span>(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">            $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&quot;src&quot;</span>, config.<span class="property">root</span> + link + src);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="property">info</span> &amp;&amp;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;update link as:--&gt;&quot;</span> + config.<span class="property">root</span> + link + src);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="property">info</span> &amp;&amp; <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="property">info</span> &amp;&amp; <span class="variable language_">console</span>.<span class="title function_">info</span>($(<span class="variable language_">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    data[key] = $.<span class="title function_">html</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在hexo的_config.yml中将post_asset_folder设置为true，以后使用hexo new命令来创建网页的时候就能在source&#x2F;.post文件夹下（与网页的index文件在一起）看见一个同名的文件夹，将需要的图片全部放到这个文件夹中。</p><p>（像我一样半路才开始打开post_asset_folder的也可以选择自己创建一个同名文件夹）</p><p>之后在网页文件中使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img 只用修改这里.jpg %&#125;</span><br></pre></td></tr></table></figure><p>方式来引用即可实现主页和文章部分均能成功显示图片。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo遇到的问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 图片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客</title>
      <link href="/2022/12/27/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/12/27/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<img src="/2022/12/27/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/OIP-C.jpg" class><span id="more"></span><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 闲谈/随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
